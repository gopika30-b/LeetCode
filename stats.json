{"leetcode":{"easy":4,"hard":0,"medium":4,"shas":{"0100-same-tree":{"0100-same-tree.java":"330bd387ff7153986411fd17ee052d77ab41866e","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.java":"9ea8fa69d07953e71a4bf70de7f542b610aa8038","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"README.md":{"":"a840a586a10275482cb4dccd5dad9bef196f963f"},"0226-invert-binary-tree":{"0226-invert-binary-tree.java":"33721756403faa83bef190cb7a4a73caeb925225","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"stats.json":{"":"d4477145255778627489bcba795937818baf9b91"},"0101-symmetric-tree":{"0101-symmetric-tree.java":"ef6c451e6973bef0f29b30d88a1056c76bf9dceb","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.java":"b2c1ad09322316eb765ad9e7988eb58f83aad68e","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"0106-construct-binary-tree-from-inorder-and-postorder-traversal":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal.java":"0b6b71306787c03d2b189617122d61d419f751e0","README.md":"8169bc76429370954eb33bb078940c0a05066e29","difficulty":"medium"},"0117-populating-next-right-pointers-in-each-node-ii":{"0117-populating-next-right-pointers-in-each-node-ii.java":"9af794575da29b27939322a53fec593e66cf5fb1","README.md":"884e1ff07d0edfb9c52d02ccac4bc0edcc5b0610","difficulty":"medium"},"0114-flatten-binary-tree-to-linked-list":{"0114-flatten-binary-tree-to-linked-list.java":"650c10f244cb593ae746188e7dcd135844b4ce9e","README.md":"581431bf3d62fd3a541ca6eb01543cb6f06b71a8","difficulty":"medium"},"0112-path-sum":{"0112-path-sum.java":"1c29976dc37edaf0fef90a39864db6269eb746f8","README.md":"98772e551dafb6d42f9d932cfe0bd4fdf77d93d6","difficulty":"easy"}},"solved":8}}