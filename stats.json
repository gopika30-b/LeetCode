{"leetcode":{"easy":3,"hard":0,"medium":2,"shas":{"0100-same-tree":{"0100-same-tree.java":"330bd387ff7153986411fd17ee052d77ab41866e","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.java":"9ea8fa69d07953e71a4bf70de7f542b610aa8038","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"README.md":{"":"beccd3aa68dbfd067b25972bb0dea5cd0a7a779c"},"0226-invert-binary-tree":{"0226-invert-binary-tree.java":"33721756403faa83bef190cb7a4a73caeb925225","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"stats.json":{"":"3345651e4a723e708a2832b7d43606626f27e267"},"0101-symmetric-tree":{"0101-symmetric-tree.java":"ef6c451e6973bef0f29b30d88a1056c76bf9dceb","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.java":"b2c1ad09322316eb765ad9e7988eb58f83aad68e","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"0106-construct-binary-tree-from-inorder-and-postorder-traversal":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal.java":"0b6b71306787c03d2b189617122d61d419f751e0","README.md":"8169bc76429370954eb33bb078940c0a05066e29","difficulty":"medium"}},"solved":5}}